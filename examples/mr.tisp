; Single recursion
(let (factorial n) (if (= n 0) 1 (* n (factorial (- n 1)))))

; OCaml style mutual recursion
(mr
  (let (even n) (if (= n 0) true  (odd  (- n 1))))
  (let (odd  n) (if (= n 0) false (even (- n 1)))))
